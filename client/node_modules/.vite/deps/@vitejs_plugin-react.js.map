{
  "version": 3,
  "sources": ["../../@vitejs/plugin-react/dist/index.mjs", "../../@rolldown/pluginutils/dist/index.js"],
  "sourcesContent": ["import { dirname, join } from 'node:path';\r\nimport { fileURLToPath } from 'node:url';\r\nimport { readFileSync } from 'node:fs';\r\nimport * as vite from 'vite';\r\nimport { createFilter } from 'vite';\r\nimport { makeIdFiltersToMatchWithQuery, exactRegex } from '@rolldown/pluginutils';\r\n\r\nconst runtimePublicPath = \"/@react-refresh\";\r\nconst reactCompRE = /extends\\s+(?:React\\.)?(?:Pure)?Component/;\r\nconst refreshContentRE = /\\$RefreshReg\\$\\(/;\r\nconst preambleCode = `import { injectIntoGlobalHook } from \"__BASE__${runtimePublicPath.slice(\r\n  1\r\n)}\";\r\ninjectIntoGlobalHook(window);\r\nwindow.$RefreshReg$ = () => {};\r\nwindow.$RefreshSig$ = () => (type) => type;`;\r\nconst getPreambleCode = (base) => preambleCode.replace(\"__BASE__\", base);\r\nconst avoidSourceMapOption = Symbol();\r\nfunction addRefreshWrapper(code, map, pluginName, id, reactRefreshHost = \"\") {\r\n  const hasRefresh = refreshContentRE.test(code);\r\n  const onlyReactComp = !hasRefresh && reactCompRE.test(code);\r\n  const normalizedMap = map === avoidSourceMapOption ? null : map;\r\n  if (!hasRefresh && !onlyReactComp) return { code, map: normalizedMap };\r\n  const avoidSourceMap = map === avoidSourceMapOption;\r\n  const newMap = typeof normalizedMap === \"string\" ? JSON.parse(normalizedMap) : normalizedMap;\r\n  let newCode = code;\r\n  if (hasRefresh) {\r\n    const refreshHead = removeLineBreaksIfNeeded(\r\n      `let prevRefreshReg;\r\nlet prevRefreshSig;\r\n\r\nif (import.meta.hot && !inWebWorker) {\r\n  if (!window.$RefreshReg$) {\r\n    throw new Error(\r\n      \"${pluginName} can't detect preamble. Something is wrong.\"\r\n    );\r\n  }\r\n\r\n  prevRefreshReg = window.$RefreshReg$;\r\n  prevRefreshSig = window.$RefreshSig$;\r\n  window.$RefreshReg$ = RefreshRuntime.getRefreshReg(${JSON.stringify(id)});\r\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\r\n}\r\n\r\n`,\r\n      avoidSourceMap\r\n    );\r\n    newCode = `${refreshHead}${newCode}\r\n\r\nif (import.meta.hot && !inWebWorker) {\r\n  window.$RefreshReg$ = prevRefreshReg;\r\n  window.$RefreshSig$ = prevRefreshSig;\r\n}\r\n`;\r\n    if (newMap) {\r\n      newMap.mappings = \";\".repeat(16) + newMap.mappings;\r\n    }\r\n  }\r\n  const sharedHead = removeLineBreaksIfNeeded(\r\n    `import * as RefreshRuntime from \"${reactRefreshHost}${runtimePublicPath}\";\r\nconst inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\r\n\r\n`,\r\n    avoidSourceMap\r\n  );\r\n  newCode = `${sharedHead}${newCode}\r\n\r\nif (import.meta.hot && !inWebWorker) {\r\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\r\n    RefreshRuntime.registerExportsForReactRefresh(${JSON.stringify(\r\n    id\r\n  )}, currentExports);\r\n    import.meta.hot.accept((nextExports) => {\r\n      if (!nextExports) return;\r\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(${JSON.stringify(\r\n    id\r\n  )}, currentExports, nextExports);\r\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\r\n    });\r\n  });\r\n}\r\n`;\r\n  if (newMap) {\r\n    newMap.mappings = \";;;\" + newMap.mappings;\r\n  }\r\n  return { code: newCode, map: newMap };\r\n}\r\nfunction removeLineBreaksIfNeeded(code, enabled) {\r\n  return enabled ? code.replace(/\\n/g, \"\") : code;\r\n}\r\n\r\nconst silenceUseClientWarning = (userConfig) => ({\r\n  rollupOptions: {\r\n    onwarn(warning, defaultHandler) {\r\n      if (warning.code === \"MODULE_LEVEL_DIRECTIVE\" && (warning.message.includes(\"use client\") || warning.message.includes(\"use server\"))) {\r\n        return;\r\n      }\r\n      if (warning.code === \"SOURCEMAP_ERROR\" && warning.message.includes(\"resolve original location\") && warning.pos === 0) {\r\n        return;\r\n      }\r\n      if (userConfig.build?.rollupOptions?.onwarn) {\r\n        userConfig.build.rollupOptions.onwarn(warning, defaultHandler);\r\n      } else {\r\n        defaultHandler(warning);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst _dirname = dirname(fileURLToPath(import.meta.url));\r\nconst refreshRuntimePath = join(_dirname, \"refresh-runtime.js\") ;\r\nlet babel;\r\nasync function loadBabel() {\r\n  if (!babel) {\r\n    babel = await import('@babel/core');\r\n  }\r\n  return babel;\r\n}\r\nconst defaultIncludeRE = /\\.[tj]sx?$/;\r\nconst tsRE = /\\.tsx?$/;\r\nfunction viteReact(opts = {}) {\r\n  const include = opts.include ?? defaultIncludeRE;\r\n  const exclude = opts.exclude;\r\n  const filter = createFilter(include, exclude);\r\n  const jsxImportSource = opts.jsxImportSource ?? \"react\";\r\n  const jsxImportRuntime = `${jsxImportSource}/jsx-runtime`;\r\n  const jsxImportDevRuntime = `${jsxImportSource}/jsx-dev-runtime`;\r\n  let runningInVite = false;\r\n  let isProduction = true;\r\n  let projectRoot = process.cwd();\r\n  let skipFastRefresh = true;\r\n  let runPluginOverrides;\r\n  let staticBabelOptions;\r\n  const importReactRE = /\\bimport\\s+(?:\\*\\s+as\\s+)?React\\b/;\r\n  const viteBabel = {\r\n    name: \"vite:react-babel\",\r\n    enforce: \"pre\",\r\n    config() {\r\n      if (opts.jsxRuntime === \"classic\") {\r\n        if (\"rolldownVersion\" in vite) {\r\n          return {\r\n            oxc: {\r\n              jsx: {\r\n                runtime: \"classic\",\r\n                // disable __self and __source injection even in dev\r\n                // as this plugin injects them by babel and oxc will throw\r\n                // if development is enabled and those properties are already present\r\n                development: false\r\n              }\r\n            }\r\n          };\r\n        } else {\r\n          return {\r\n            esbuild: {\r\n              jsx: \"transform\"\r\n            }\r\n          };\r\n        }\r\n      } else {\r\n        return {\r\n          esbuild: {\r\n            jsx: \"automatic\",\r\n            jsxImportSource: opts.jsxImportSource\r\n          },\r\n          optimizeDeps: \"rolldownVersion\" in vite ? { rollupOptions: { jsx: { mode: \"automatic\" } } } : { esbuildOptions: { jsx: \"automatic\" } }\r\n        };\r\n      }\r\n    },\r\n    configResolved(config) {\r\n      runningInVite = true;\r\n      projectRoot = config.root;\r\n      isProduction = config.isProduction;\r\n      skipFastRefresh = isProduction || config.command === \"build\" || config.server.hmr === false;\r\n      if (\"jsxPure\" in opts) {\r\n        config.logger.warnOnce(\r\n          \"[@vitejs/plugin-react] jsxPure was removed. You can configure esbuild.jsxSideEffects directly.\"\r\n        );\r\n      }\r\n      const hooks = config.plugins.map((plugin) => plugin.api?.reactBabel).filter(defined);\r\n      if (\"rolldownVersion\" in vite && !opts.babel && !hooks.length && !opts.disableOxcRecommendation) {\r\n        config.logger.warn(\r\n          \"[vite:react-babel] We recommend switching to `@vitejs/plugin-react-oxc` for improved performance. More information at https://vite.dev/rolldown\"\r\n        );\r\n      }\r\n      if (hooks.length > 0) {\r\n        runPluginOverrides = (babelOptions, context) => {\r\n          hooks.forEach((hook) => hook(babelOptions, context, config));\r\n        };\r\n      } else if (typeof opts.babel !== \"function\") {\r\n        staticBabelOptions = createBabelOptions(opts.babel);\r\n        if (canSkipBabel(staticBabelOptions.plugins, staticBabelOptions) && skipFastRefresh && (opts.jsxRuntime === \"classic\" ? isProduction : true)) {\r\n          delete viteBabel.transform;\r\n        }\r\n      }\r\n    },\r\n    options(options) {\r\n      if (!runningInVite) {\r\n        options.jsx = {\r\n          mode: opts.jsxRuntime,\r\n          importSource: opts.jsxImportSource\r\n        };\r\n        return options;\r\n      }\r\n    },\r\n    transform: {\r\n      filter: {\r\n        id: {\r\n          include: makeIdFiltersToMatchWithQuery(include),\r\n          exclude: [\r\n            ...exclude ? makeIdFiltersToMatchWithQuery(ensureArray(exclude)) : [],\r\n            /\\/node_modules\\//\r\n          ]\r\n        }\r\n      },\r\n      async handler(code, id, options) {\r\n        if (id.includes(\"/node_modules/\")) return;\r\n        const [filepath] = id.split(\"?\");\r\n        if (!filter(filepath)) return;\r\n        const ssr = options?.ssr === true;\r\n        const babelOptions = (() => {\r\n          if (staticBabelOptions) return staticBabelOptions;\r\n          const newBabelOptions = createBabelOptions(\r\n            typeof opts.babel === \"function\" ? opts.babel(id, { ssr }) : opts.babel\r\n          );\r\n          runPluginOverrides?.(newBabelOptions, { id, ssr });\r\n          return newBabelOptions;\r\n        })();\r\n        const plugins = [...babelOptions.plugins];\r\n        const isJSX = filepath.endsWith(\"x\");\r\n        const useFastRefresh = !skipFastRefresh && !ssr && (isJSX || (opts.jsxRuntime === \"classic\" ? importReactRE.test(code) : code.includes(jsxImportDevRuntime) || code.includes(jsxImportRuntime)));\r\n        if (useFastRefresh) {\r\n          plugins.push([\r\n            await loadPlugin(\"react-refresh/babel\"),\r\n            { skipEnvCheck: true }\r\n          ]);\r\n        }\r\n        if (opts.jsxRuntime === \"classic\" && isJSX) {\r\n          if (!isProduction) {\r\n            plugins.push(\r\n              await loadPlugin(\"@babel/plugin-transform-react-jsx-self\"),\r\n              await loadPlugin(\"@babel/plugin-transform-react-jsx-source\")\r\n            );\r\n          }\r\n        }\r\n        if (canSkipBabel(plugins, babelOptions)) {\r\n          return;\r\n        }\r\n        const parserPlugins = [...babelOptions.parserOpts.plugins];\r\n        if (!filepath.endsWith(\".ts\")) {\r\n          parserPlugins.push(\"jsx\");\r\n        }\r\n        if (tsRE.test(filepath)) {\r\n          parserPlugins.push(\"typescript\");\r\n        }\r\n        const babel2 = await loadBabel();\r\n        const result = await babel2.transformAsync(code, {\r\n          ...babelOptions,\r\n          root: projectRoot,\r\n          filename: id,\r\n          sourceFileName: filepath,\r\n          // Required for esbuild.jsxDev to provide correct line numbers\r\n          // This creates issues the react compiler because the re-order is too important\r\n          // People should use @babel/plugin-transform-react-jsx-development to get back good line numbers\r\n          retainLines: getReactCompilerPlugin(plugins) != null ? false : !isProduction && isJSX && opts.jsxRuntime !== \"classic\",\r\n          parserOpts: {\r\n            ...babelOptions.parserOpts,\r\n            sourceType: \"module\",\r\n            allowAwaitOutsideFunction: true,\r\n            plugins: parserPlugins\r\n          },\r\n          generatorOpts: {\r\n            ...babelOptions.generatorOpts,\r\n            // import attributes parsing available without plugin since 7.26\r\n            importAttributesKeyword: \"with\",\r\n            decoratorsBeforeExport: true\r\n          },\r\n          plugins,\r\n          sourceMaps: true\r\n        });\r\n        if (result) {\r\n          if (!useFastRefresh) {\r\n            return { code: result.code, map: result.map };\r\n          }\r\n          return addRefreshWrapper(\r\n            result.code,\r\n            result.map,\r\n            \"@vitejs/plugin-react\",\r\n            id,\r\n            opts.reactRefreshHost\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const dependencies = [\r\n    \"react\",\r\n    \"react-dom\",\r\n    jsxImportDevRuntime,\r\n    jsxImportRuntime\r\n  ];\r\n  const staticBabelPlugins = typeof opts.babel === \"object\" ? opts.babel?.plugins ?? [] : [];\r\n  const reactCompilerPlugin = getReactCompilerPlugin(staticBabelPlugins);\r\n  if (reactCompilerPlugin != null) {\r\n    const reactCompilerRuntimeModule = getReactCompilerRuntimeModule(reactCompilerPlugin);\r\n    dependencies.push(reactCompilerRuntimeModule);\r\n  }\r\n  const viteReactRefresh = {\r\n    name: \"vite:react-refresh\",\r\n    enforce: \"pre\",\r\n    config: (userConfig) => ({\r\n      build: silenceUseClientWarning(userConfig),\r\n      optimizeDeps: {\r\n        include: dependencies\r\n      },\r\n      resolve: {\r\n        dedupe: [\"react\", \"react-dom\"]\r\n      }\r\n    }),\r\n    resolveId: {\r\n      filter: { id: exactRegex(runtimePublicPath) },\r\n      handler(id) {\r\n        if (id === runtimePublicPath) {\r\n          return id;\r\n        }\r\n      }\r\n    },\r\n    load: {\r\n      filter: { id: exactRegex(runtimePublicPath) },\r\n      handler(id) {\r\n        if (id === runtimePublicPath) {\r\n          return readFileSync(refreshRuntimePath, \"utf-8\").replace(\r\n            /__README_URL__/g,\r\n            \"https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react\"\r\n          );\r\n        }\r\n      }\r\n    },\r\n    transformIndexHtml(_, config) {\r\n      if (!skipFastRefresh)\r\n        return [\r\n          {\r\n            tag: \"script\",\r\n            attrs: { type: \"module\" },\r\n            children: getPreambleCode(config.server.config.base)\r\n          }\r\n        ];\r\n    }\r\n  };\r\n  return [viteBabel, viteReactRefresh];\r\n}\r\nviteReact.preambleCode = preambleCode;\r\nfunction canSkipBabel(plugins, babelOptions) {\r\n  return !(plugins.length || babelOptions.presets.length || babelOptions.configFile || babelOptions.babelrc);\r\n}\r\nconst loadedPlugin = /* @__PURE__ */ new Map();\r\nfunction loadPlugin(path) {\r\n  const cached = loadedPlugin.get(path);\r\n  if (cached) return cached;\r\n  const promise = import(path).then((module) => {\r\n    const value = module.default || module;\r\n    loadedPlugin.set(path, value);\r\n    return value;\r\n  });\r\n  loadedPlugin.set(path, promise);\r\n  return promise;\r\n}\r\nfunction createBabelOptions(rawOptions) {\r\n  const babelOptions = {\r\n    babelrc: false,\r\n    configFile: false,\r\n    ...rawOptions\r\n  };\r\n  babelOptions.plugins ||= [];\r\n  babelOptions.presets ||= [];\r\n  babelOptions.overrides ||= [];\r\n  babelOptions.parserOpts ||= {};\r\n  babelOptions.parserOpts.plugins ||= [];\r\n  return babelOptions;\r\n}\r\nfunction defined(value) {\r\n  return value !== void 0;\r\n}\r\nfunction getReactCompilerPlugin(plugins) {\r\n  return plugins.find(\r\n    (p) => p === \"babel-plugin-react-compiler\" || Array.isArray(p) && p[0] === \"babel-plugin-react-compiler\"\r\n  );\r\n}\r\nfunction getReactCompilerRuntimeModule(plugin) {\r\n  let moduleName = \"react/compiler-runtime\";\r\n  if (Array.isArray(plugin)) {\r\n    if (plugin[1]?.target === \"17\" || plugin[1]?.target === \"18\") {\r\n      moduleName = \"react-compiler-runtime\";\r\n    } else if (typeof plugin[1]?.runtimeModule === \"string\") {\r\n      moduleName = plugin[1]?.runtimeModule;\r\n    }\r\n  }\r\n  return moduleName;\r\n}\r\nfunction ensureArray(value) {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n\r\nexport { viteReact as default };\r\n", "//#region src/utils.ts\r\nconst postfixRE = /[?#].*$/;\r\nfunction cleanUrl(url) {\r\n\treturn url.replace(postfixRE, \"\");\r\n}\r\nfunction extractQueryWithoutFragment(url) {\r\n\tconst questionMarkIndex = url.indexOf(\"?\");\r\n\tif (questionMarkIndex === -1) return \"\";\r\n\tconst fragmentIndex = url.indexOf(\"#\", questionMarkIndex);\r\n\tif (fragmentIndex === -1) return url.substring(questionMarkIndex);\r\n\telse return url.substring(questionMarkIndex, fragmentIndex);\r\n}\r\n\r\n//#endregion\r\n//#region src/composable-filters.ts\r\nvar And = class {\r\n\tkind;\r\n\targs;\r\n\tconstructor(...args) {\r\n\t\tif (args.length === 0) throw new Error(\"`And` expects at least one operand\");\r\n\t\tthis.args = args;\r\n\t\tthis.kind = \"and\";\r\n\t}\r\n};\r\nvar Or = class {\r\n\tkind;\r\n\targs;\r\n\tconstructor(...args) {\r\n\t\tif (args.length === 0) throw new Error(\"`Or` expects at least one operand\");\r\n\t\tthis.args = args;\r\n\t\tthis.kind = \"or\";\r\n\t}\r\n};\r\nvar Not = class {\r\n\tkind;\r\n\texpr;\r\n\tconstructor(expr) {\r\n\t\tthis.expr = expr;\r\n\t\tthis.kind = \"not\";\r\n\t}\r\n};\r\nvar Id = class {\r\n\tkind;\r\n\tpattern;\r\n\tparams;\r\n\tconstructor(pattern, params) {\r\n\t\tthis.pattern = pattern;\r\n\t\tthis.kind = \"id\";\r\n\t\tthis.params = params ?? { cleanUrl: false };\r\n\t}\r\n};\r\nvar ModuleType = class {\r\n\tkind;\r\n\tpattern;\r\n\tconstructor(pattern) {\r\n\t\tthis.pattern = pattern;\r\n\t\tthis.kind = \"moduleType\";\r\n\t}\r\n};\r\nvar Code = class {\r\n\tkind;\r\n\tpattern;\r\n\tconstructor(expr) {\r\n\t\tthis.pattern = expr;\r\n\t\tthis.kind = \"code\";\r\n\t}\r\n};\r\nvar Query = class {\r\n\tkind;\r\n\tkey;\r\n\tpattern;\r\n\tconstructor(key, pattern) {\r\n\t\tthis.pattern = pattern;\r\n\t\tthis.key = key;\r\n\t\tthis.kind = \"query\";\r\n\t}\r\n};\r\nvar Include = class {\r\n\tkind;\r\n\texpr;\r\n\tconstructor(expr) {\r\n\t\tthis.expr = expr;\r\n\t\tthis.kind = \"include\";\r\n\t}\r\n};\r\nvar Exclude = class {\r\n\tkind;\r\n\texpr;\r\n\tconstructor(expr) {\r\n\t\tthis.expr = expr;\r\n\t\tthis.kind = \"exclude\";\r\n\t}\r\n};\r\nfunction and(...args) {\r\n\treturn new And(...args);\r\n}\r\nfunction or(...args) {\r\n\treturn new Or(...args);\r\n}\r\nfunction not(expr) {\r\n\treturn new Not(expr);\r\n}\r\nfunction id(pattern, params) {\r\n\treturn new Id(pattern, params);\r\n}\r\nfunction moduleType(pattern) {\r\n\treturn new ModuleType(pattern);\r\n}\r\nfunction code(pattern) {\r\n\treturn new Code(pattern);\r\n}\r\nfunction query(key, pattern) {\r\n\treturn new Query(key, pattern);\r\n}\r\nfunction include(expr) {\r\n\treturn new Include(expr);\r\n}\r\nfunction exclude(expr) {\r\n\treturn new Exclude(expr);\r\n}\r\n/**\r\n* convert a queryObject to FilterExpression like\r\n* ```js\r\n*   and(query(k1, v1), query(k2, v2))\r\n* ```\r\n* @param queryFilterObject The query filter object needs to be matched.\r\n* @returns a `And` FilterExpression\r\n*/\r\nfunction queries(queryFilter) {\r\n\tlet arr = Object.entries(queryFilter).map(([key, value]) => {\r\n\t\treturn new Query(key, value);\r\n\t});\r\n\treturn and(...arr);\r\n}\r\nfunction interpreter(exprs, code$1, id$1, moduleType$1) {\r\n\tlet arr = [];\r\n\tif (Array.isArray(exprs)) arr = exprs;\r\n\telse arr = [exprs];\r\n\treturn interpreterImpl(arr, code$1, id$1, moduleType$1);\r\n}\r\nfunction interpreterImpl(expr, code$1, id$1, moduleType$1, ctx = {}) {\r\n\tlet hasInclude = false;\r\n\tfor (const e of expr) switch (e.kind) {\r\n\t\tcase \"include\": {\r\n\t\t\thasInclude = true;\r\n\t\t\tif (exprInterpreter(e.expr, code$1, id$1, moduleType$1, ctx)) return true;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"exclude\": {\r\n\t\t\tif (exprInterpreter(e.expr, code$1, id$1, moduleType$1)) return false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn !hasInclude;\r\n}\r\nfunction exprInterpreter(expr, code$1, id$1, moduleType$1, ctx = {}) {\r\n\tswitch (expr.kind) {\r\n\t\tcase \"and\": return expr.args.every((e) => exprInterpreter(e, code$1, id$1, moduleType$1, ctx));\r\n\t\tcase \"or\": return expr.args.some((e) => exprInterpreter(e, code$1, id$1, moduleType$1, ctx));\r\n\t\tcase \"not\": return !exprInterpreter(expr.expr, code$1, id$1, moduleType$1, ctx);\r\n\t\tcase \"id\": {\r\n\t\t\tif (id$1 === void 0) throw new Error(\"`id` is required for `id` expression\");\r\n\t\t\tif (expr.params.cleanUrl) id$1 = cleanUrl(id$1);\r\n\t\t\treturn typeof expr.pattern === \"string\" ? id$1 === expr.pattern : expr.pattern.test(id$1);\r\n\t\t}\r\n\t\tcase \"moduleType\": {\r\n\t\t\tif (moduleType$1 === void 0) throw new Error(\"`moduleType` is required for `moduleType` expression\");\r\n\t\t\treturn moduleType$1 === expr.pattern;\r\n\t\t}\r\n\t\tcase \"code\": {\r\n\t\t\tif (code$1 === void 0) throw new Error(\"`code` is required for `code` expression\");\r\n\t\t\treturn typeof expr.pattern === \"string\" ? code$1.includes(expr.pattern) : expr.pattern.test(code$1);\r\n\t\t}\r\n\t\tcase \"query\": {\r\n\t\t\tif (id$1 === void 0) throw new Error(\"`id` is required for `Query` expression\");\r\n\t\t\tif (!ctx.urlSearchParamsCache) {\r\n\t\t\t\tlet queryString = extractQueryWithoutFragment(id$1);\r\n\t\t\t\tctx.urlSearchParamsCache = new URLSearchParams(queryString);\r\n\t\t\t}\r\n\t\t\tlet urlParams = ctx.urlSearchParamsCache;\r\n\t\t\tif (typeof expr.pattern === \"boolean\") if (expr.pattern) return urlParams.has(expr.key);\r\n\t\t\telse return !urlParams.has(expr.key);\r\n\t\t\telse if (typeof expr.pattern === \"string\") return urlParams.get(expr.key) === expr.pattern;\r\n\t\t\telse return expr.pattern.test(urlParams.get(expr.key) ?? \"\");\r\n\t\t}\r\n\t\tdefault: throw new Error(`Expression ${JSON.stringify(expr)} is not expected.`);\r\n\t}\r\n}\r\n\r\n//#endregion\r\n//#region src/simple-filters.ts\r\n/**\r\n* Constructs a RegExp that matches the exact string specified.\r\n*\r\n* This is useful for plugin hook filters.\r\n*\r\n* @param str the string to match.\r\n* @param flags flags for the RegExp.\r\n*\r\n* @example\r\n* ```ts\r\n* import { exactRegex } from '@rolldown/pluginutils';\r\n* const plugin = {\r\n*   name: 'plugin',\r\n*   resolveId: {\r\n*     filter: { id: exactRegex('foo') },\r\n*     handler(id) {} // will only be called for `foo`\r\n*   }\r\n* }\r\n* ```\r\n*/\r\nfunction exactRegex(str, flags) {\r\n\treturn new RegExp(`^${escapeRegex(str)}$`, flags);\r\n}\r\n/**\r\n* Constructs a RegExp that matches a value that has the specified prefix.\r\n*\r\n* This is useful for plugin hook filters.\r\n*\r\n* @param str the string to match.\r\n* @param flags flags for the RegExp.\r\n*\r\n* @example\r\n* ```ts\r\n* import { prefixRegex } from '@rolldown/pluginutils';\r\n* const plugin = {\r\n*   name: 'plugin',\r\n*   resolveId: {\r\n*     filter: { id: prefixRegex('foo') },\r\n*     handler(id) {} // will only be called for IDs starting with `foo`\r\n*   }\r\n* }\r\n* ```\r\n*/\r\nfunction prefixRegex(str, flags) {\r\n\treturn new RegExp(`^${escapeRegex(str)}`, flags);\r\n}\r\nconst escapeRegexRE = /[-/\\\\^$*+?.()|[\\]{}]/g;\r\nfunction escapeRegex(str) {\r\n\treturn str.replace(escapeRegexRE, \"\\\\$&\");\r\n}\r\nfunction makeIdFiltersToMatchWithQuery(input) {\r\n\tif (!Array.isArray(input)) return makeIdFilterToMatchWithQuery(input);\r\n\treturn input.map((i) => makeIdFilterToMatchWithQuery(i));\r\n}\r\nfunction makeIdFilterToMatchWithQuery(input) {\r\n\tif (typeof input === \"string\") return `${input}{?*,}`;\r\n\treturn makeRegexIdFilterToMatchWithQuery(input);\r\n}\r\nfunction makeRegexIdFilterToMatchWithQuery(input) {\r\n\treturn new RegExp(input.source.replace(/(?<!\\\\)\\$/g, \"(?:\\\\?.*)?$\"), input.flags);\r\n}\r\n\r\n//#endregion\r\nexport { and, code, exactRegex, exclude, exprInterpreter, id, include, interpreter, interpreterImpl, makeIdFiltersToMatchWithQuery, moduleType, not, or, prefixRegex, queries, query };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,uBAA8B;AAC9B,sBAA8B;AAC9B,qBAA6B;;;ACiN7B,SAAS,WAAW,KAAK,OAAO;AAC/B,SAAO,IAAI,OAAO,IAAI,YAAY,GAAG,CAAC,KAAK,KAAK;AACjD;AAwBA,IAAM,gBAAgB;AACtB,SAAS,YAAY,KAAK;AACzB,SAAO,IAAI,QAAQ,eAAe,MAAM;AACzC;AACA,SAAS,8BAA8B,OAAO;AAC7C,MAAI,CAAC,MAAM,QAAQ,KAAK,EAAG,QAAO,6BAA6B,KAAK;AACpE,SAAO,MAAM,IAAI,CAAC,MAAM,6BAA6B,CAAC,CAAC;AACxD;AACA,SAAS,6BAA6B,OAAO;AAC5C,MAAI,OAAO,UAAU,SAAU,QAAO,GAAG,KAAK;AAC9C,SAAO,kCAAkC,KAAK;AAC/C;AACA,SAAS,kCAAkC,OAAO;AACjD,SAAO,IAAI,OAAO,MAAM,OAAO,QAAQ,WAAC,gBAAU,GAAC,GAAE,aAAa,GAAG,MAAM,KAAK;AACjF;;;ADpPA,IAAM,oBAAoB;AAC1B,IAAM,cAAc;AACpB,IAAM,mBAAmB;AACzB,IAAM,eAAe,iDAAiD,kBAAkB;AAAA,EACtF;AACF,CAAC;AAAA;AAAA;AAAA;AAID,IAAM,kBAAkB,CAAC,SAAS,aAAa,QAAQ,YAAY,IAAI;AACvE,IAAM,uBAAuB,OAAO;AACpC,SAAS,kBAAkB,MAAM,KAAK,YAAY,IAAI,mBAAmB,IAAI;AAC3E,QAAM,aAAa,iBAAiB,KAAK,IAAI;AAC7C,QAAM,gBAAgB,CAAC,cAAc,YAAY,KAAK,IAAI;AAC1D,QAAM,gBAAgB,QAAQ,uBAAuB,OAAO;AAC5D,MAAI,CAAC,cAAc,CAAC,cAAe,QAAO,EAAE,MAAM,KAAK,cAAc;AACrE,QAAM,iBAAiB,QAAQ;AAC/B,QAAM,SAAS,OAAO,kBAAkB,WAAW,KAAK,MAAM,aAAa,IAAI;AAC/E,MAAI,UAAU;AACd,MAAI,YAAY;AACd,UAAM,cAAc;AAAA,MAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAMoC,KAAK,UAAU,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnE;AAAA,IACF;AACA,cAAU,GAAG,WAAW,GAAG,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlC,QAAI,QAAQ;AACV,aAAO,WAAW,IAAI,OAAO,EAAE,IAAI,OAAO;AAAA,IAC5C;AAAA,EACF;AACA,QAAM,aAAa;AAAA,IACjB,oCAAoC,gBAAgB,GAAG,iBAAiB;AAAA;AAAA;AAAA;AAAA,IAIxE;AAAA,EACF;AACA,YAAU,GAAG,UAAU,GAAG,OAAO;AAAA;AAAA;AAAA;AAAA,oDAIiB,KAAK;AAAA,IACrD;AAAA,EACF,CAAC;AAAA;AAAA;AAAA,yFAGsF,KAAK;AAAA,IAC1F;AAAA,EACF,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,MAAI,QAAQ;AACV,WAAO,WAAW,QAAQ,OAAO;AAAA,EACnC;AACA,SAAO,EAAE,MAAM,SAAS,KAAK,OAAO;AACtC;AACA,SAAS,yBAAyB,MAAM,SAAS;AAC/C,SAAO,UAAU,KAAK,QAAQ,OAAO,EAAE,IAAI;AAC7C;AAEA,IAAM,0BAA0B,CAAC,gBAAgB;AAAA,EAC/C,eAAe;AAAA,IACb,OAAO,SAAS,gBAAgB;AAC9B,UAAI,QAAQ,SAAS,6BAA6B,QAAQ,QAAQ,SAAS,YAAY,KAAK,QAAQ,QAAQ,SAAS,YAAY,IAAI;AACnI;AAAA,MACF;AACA,UAAI,QAAQ,SAAS,qBAAqB,QAAQ,QAAQ,SAAS,2BAA2B,KAAK,QAAQ,QAAQ,GAAG;AACpH;AAAA,MACF;AACA,UAAI,WAAW,OAAO,eAAe,QAAQ;AAC3C,mBAAW,MAAM,cAAc,OAAO,SAAS,cAAc;AAAA,MAC/D,OAAO;AACL,uBAAe,OAAO;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAM,eAAW,8BAAQ,+BAAc,YAAY,GAAG,CAAC;AACvD,IAAM,yBAAqB,uBAAK,UAAU,oBAAoB;AAC9D,IAAI;AACJ,eAAe,YAAY;AACzB,MAAI,CAAC,OAAO;AACV,YAAQ,MAAM,OAAO,mBAAa;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,mBAAmB;AACzB,IAAM,OAAO;AACb,SAAS,UAAU,OAAO,CAAC,GAAG;AAC5B,QAAM,UAAU,KAAK,WAAW;AAChC,QAAM,UAAU,KAAK;AACrB,QAAM,SAAS,aAAa,SAAS,OAAO;AAC5C,QAAM,kBAAkB,KAAK,mBAAmB;AAChD,QAAM,mBAAmB,GAAG,eAAe;AAC3C,QAAM,sBAAsB,GAAG,eAAe;AAC9C,MAAI,gBAAgB;AACpB,MAAI,eAAe;AACnB,MAAI,cAAc,QAAQ,IAAI;AAC9B,MAAI,kBAAkB;AACtB,MAAI;AACJ,MAAI;AACJ,QAAM,gBAAgB;AACtB,QAAM,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AACP,UAAI,KAAK,eAAe,WAAW;AACjC,YAAI,qBAAqB,cAAM;AAC7B,iBAAO;AAAA,YACL,KAAK;AAAA,cACH,KAAK;AAAA,gBACH,SAAS;AAAA;AAAA;AAAA;AAAA,gBAIT,aAAa;AAAA,cACf;AAAA,YACF;AAAA,UACF;AAAA,QACF,OAAO;AACL,iBAAO;AAAA,YACL,SAAS;AAAA,cACP,KAAK;AAAA,YACP;AAAA,UACF;AAAA,QACF;AAAA,MACF,OAAO;AACL,eAAO;AAAA,UACL,SAAS;AAAA,YACP,KAAK;AAAA,YACL,iBAAiB,KAAK;AAAA,UACxB;AAAA,UACA,cAAc,qBAAqB,eAAO,EAAE,eAAe,EAAE,KAAK,EAAE,MAAM,YAAY,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,YAAY,EAAE;AAAA,QACvI;AAAA,MACF;AAAA,IACF;AAAA,IACA,eAAe,QAAQ;AACrB,sBAAgB;AAChB,oBAAc,OAAO;AACrB,qBAAe,OAAO;AACtB,wBAAkB,gBAAgB,OAAO,YAAY,WAAW,OAAO,OAAO,QAAQ;AACtF,UAAI,aAAa,MAAM;AACrB,eAAO,OAAO;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AACA,YAAM,QAAQ,OAAO,QAAQ,IAAI,CAAC,WAAW,OAAO,KAAK,UAAU,EAAE,OAAO,OAAO;AACnF,UAAI,qBAAqB,gBAAQ,CAAC,KAAK,SAAS,CAAC,MAAM,UAAU,CAAC,KAAK,0BAA0B;AAC/F,eAAO,OAAO;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AACA,UAAI,MAAM,SAAS,GAAG;AACpB,6BAAqB,CAAC,cAAc,YAAY;AAC9C,gBAAM,QAAQ,CAAC,SAAS,KAAK,cAAc,SAAS,MAAM,CAAC;AAAA,QAC7D;AAAA,MACF,WAAW,OAAO,KAAK,UAAU,YAAY;AAC3C,6BAAqB,mBAAmB,KAAK,KAAK;AAClD,YAAI,aAAa,mBAAmB,SAAS,kBAAkB,KAAK,oBAAoB,KAAK,eAAe,YAAY,eAAe,OAAO;AAC5I,iBAAO,UAAU;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ,SAAS;AACf,UAAI,CAAC,eAAe;AAClB,gBAAQ,MAAM;AAAA,UACZ,MAAM,KAAK;AAAA,UACX,cAAc,KAAK;AAAA,QACrB;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,WAAW;AAAA,MACT,QAAQ;AAAA,QACN,IAAI;AAAA,UACF,SAAS,8BAA8B,OAAO;AAAA,UAC9C,SAAS;AAAA,YACP,GAAG,UAAU,8BAA8B,YAAY,OAAO,CAAC,IAAI,CAAC;AAAA,YACpE;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,MAAM,QAAQ,MAAM,IAAI,SAAS;AAC/B,YAAI,GAAG,SAAS,gBAAgB,EAAG;AACnC,cAAM,CAAC,QAAQ,IAAI,GAAG,MAAM,GAAG;AAC/B,YAAI,CAAC,OAAO,QAAQ,EAAG;AACvB,cAAM,MAAM,SAAS,QAAQ;AAC7B,cAAM,gBAAgB,MAAM;AAC1B,cAAI,mBAAoB,QAAO;AAC/B,gBAAM,kBAAkB;AAAA,YACtB,OAAO,KAAK,UAAU,aAAa,KAAK,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK;AAAA,UACpE;AACA,+BAAqB,iBAAiB,EAAE,IAAI,IAAI,CAAC;AACjD,iBAAO;AAAA,QACT,GAAG;AACH,cAAM,UAAU,CAAC,GAAG,aAAa,OAAO;AACxC,cAAM,QAAQ,SAAS,SAAS,GAAG;AACnC,cAAM,iBAAiB,CAAC,mBAAmB,CAAC,QAAQ,UAAU,KAAK,eAAe,YAAY,cAAc,KAAK,IAAI,IAAI,KAAK,SAAS,mBAAmB,KAAK,KAAK,SAAS,gBAAgB;AAC7L,YAAI,gBAAgB;AAClB,kBAAQ,KAAK;AAAA,YACX,MAAM,WAAW,qBAAqB;AAAA,YACtC,EAAE,cAAc,KAAK;AAAA,UACvB,CAAC;AAAA,QACH;AACA,YAAI,KAAK,eAAe,aAAa,OAAO;AAC1C,cAAI,CAAC,cAAc;AACjB,oBAAQ;AAAA,cACN,MAAM,WAAW,wCAAwC;AAAA,cACzD,MAAM,WAAW,0CAA0C;AAAA,YAC7D;AAAA,UACF;AAAA,QACF;AACA,YAAI,aAAa,SAAS,YAAY,GAAG;AACvC;AAAA,QACF;AACA,cAAM,gBAAgB,CAAC,GAAG,aAAa,WAAW,OAAO;AACzD,YAAI,CAAC,SAAS,SAAS,KAAK,GAAG;AAC7B,wBAAc,KAAK,KAAK;AAAA,QAC1B;AACA,YAAI,KAAK,KAAK,QAAQ,GAAG;AACvB,wBAAc,KAAK,YAAY;AAAA,QACjC;AACA,cAAM,SAAS,MAAM,UAAU;AAC/B,cAAM,SAAS,MAAM,OAAO,eAAe,MAAM;AAAA,UAC/C,GAAG;AAAA,UACH,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA;AAAA;AAAA;AAAA,UAIhB,aAAa,uBAAuB,OAAO,KAAK,OAAO,QAAQ,CAAC,gBAAgB,SAAS,KAAK,eAAe;AAAA,UAC7G,YAAY;AAAA,YACV,GAAG,aAAa;AAAA,YAChB,YAAY;AAAA,YACZ,2BAA2B;AAAA,YAC3B,SAAS;AAAA,UACX;AAAA,UACA,eAAe;AAAA,YACb,GAAG,aAAa;AAAA;AAAA,YAEhB,yBAAyB;AAAA,YACzB,wBAAwB;AAAA,UAC1B;AAAA,UACA;AAAA,UACA,YAAY;AAAA,QACd,CAAC;AACD,YAAI,QAAQ;AACV,cAAI,CAAC,gBAAgB;AACnB,mBAAO,EAAE,MAAM,OAAO,MAAM,KAAK,OAAO,IAAI;AAAA,UAC9C;AACA,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,OAAO;AAAA,YACP;AAAA,YACA;AAAA,YACA,KAAK;AAAA,UACP;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,QAAM,eAAe;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,qBAAqB,OAAO,KAAK,UAAU,WAAW,KAAK,OAAO,WAAW,CAAC,IAAI,CAAC;AACzF,QAAM,sBAAsB,uBAAuB,kBAAkB;AACrE,MAAI,uBAAuB,MAAM;AAC/B,UAAM,6BAA6B,8BAA8B,mBAAmB;AACpF,iBAAa,KAAK,0BAA0B;AAAA,EAC9C;AACA,QAAM,mBAAmB;AAAA,IACvB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,QAAQ,CAAC,gBAAgB;AAAA,MACvB,OAAO,wBAAwB,UAAU;AAAA,MACzC,cAAc;AAAA,QACZ,SAAS;AAAA,MACX;AAAA,MACA,SAAS;AAAA,QACP,QAAQ,CAAC,SAAS,WAAW;AAAA,MAC/B;AAAA,IACF;AAAA,IACA,WAAW;AAAA,MACT,QAAQ,EAAE,IAAI,WAAW,iBAAiB,EAAE;AAAA,MAC5C,QAAQ,IAAI;AACV,YAAI,OAAO,mBAAmB;AAC5B,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,MACJ,QAAQ,EAAE,IAAI,WAAW,iBAAiB,EAAE;AAAA,MAC5C,QAAQ,IAAI;AACV,YAAI,OAAO,mBAAmB;AAC5B,qBAAO,6BAAa,oBAAoB,OAAO,EAAE;AAAA,YAC/C;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,mBAAmB,GAAG,QAAQ;AAC5B,UAAI,CAAC;AACH,eAAO;AAAA,UACL;AAAA,YACE,KAAK;AAAA,YACL,OAAO,EAAE,MAAM,SAAS;AAAA,YACxB,UAAU,gBAAgB,OAAO,OAAO,OAAO,IAAI;AAAA,UACrD;AAAA,QACF;AAAA,IACJ;AAAA,EACF;AACA,SAAO,CAAC,WAAW,gBAAgB;AACrC;AACA,UAAU,eAAe;AACzB,SAAS,aAAa,SAAS,cAAc;AAC3C,SAAO,EAAE,QAAQ,UAAU,aAAa,QAAQ,UAAU,aAAa,cAAc,aAAa;AACpG;AACA,IAAM,eAA+B,oBAAI,IAAI;AAC7C,SAAS,WAAW,MAAM;AACxB,QAAM,SAAS,aAAa,IAAI,IAAI;AACpC,MAAI,OAAQ,QAAO;AACnB,QAAM,UAAU,OAAO,MAAM,KAAK,CAAC,WAAW;AAC5C,UAAM,QAAQ,OAAO,WAAW;AAChC,iBAAa,IAAI,MAAM,KAAK;AAC5B,WAAO;AAAA,EACT,CAAC;AACD,eAAa,IAAI,MAAM,OAAO;AAC9B,SAAO;AACT;AACA,SAAS,mBAAmB,YAAY;AACtC,QAAM,eAAe;AAAA,IACnB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,GAAG;AAAA,EACL;AACA,eAAa,YAAY,CAAC;AAC1B,eAAa,YAAY,CAAC;AAC1B,eAAa,cAAc,CAAC;AAC5B,eAAa,eAAe,CAAC;AAC7B,eAAa,WAAW,YAAY,CAAC;AACrC,SAAO;AACT;AACA,SAAS,QAAQ,OAAO;AACtB,SAAO,UAAU;AACnB;AACA,SAAS,uBAAuB,SAAS;AACvC,SAAO,QAAQ;AAAA,IACb,CAAC,MAAM,MAAM,iCAAiC,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC,MAAM;AAAA,EAC7E;AACF;AACA,SAAS,8BAA8B,QAAQ;AAC7C,MAAI,aAAa;AACjB,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,QAAI,OAAO,CAAC,GAAG,WAAW,QAAQ,OAAO,CAAC,GAAG,WAAW,MAAM;AAC5D,mBAAa;AAAA,IACf,WAAW,OAAO,OAAO,CAAC,GAAG,kBAAkB,UAAU;AACvD,mBAAa,OAAO,CAAC,GAAG;AAAA,IAC1B;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,YAAY,OAAO;AAC1B,SAAO,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC9C;",
  "names": []
}
