type LogLevel = "info" | "warn" | "error" | "measure" | "debug" | "group" | "none" | "groupEnd";
type DevToolsConfig = {
    enableDevTools?: boolean;
    logLevel?: LogLevel;
    trackPerformance?: boolean;
    enableConsoleGroups?: boolean;
    enableStateTimeline?: boolean;
};
export declare const configureDevTools: (config: DevToolsConfig) => void;
export declare const devTools: {
    log: (message: string, style?: LogLevel, ...args: any[]) => void;
    mark: (markName: string) => void;
    measure: (measureName: string, startMark: string, endMark: string) => void;
    trackStateChange: (storeName: string, value: any) => void;
    getStateTimeline: () => {
        timestamp: number;
        storeName: string;
        value: any;
    }[];
    clearStateTimeline: () => void;
    logPerformance: () => void;
    visualizeStateChanges: () => void;
};
export {};
